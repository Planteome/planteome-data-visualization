[
  {
    "Id": "484797",
    "ThreadId": "224819",
    "Html": "<p>Hello,</p>\r\n<p>First of all I want to thank this Site for this very good work.</p>\r\n<p>I make a doctorate in anthropology in France and I really need this tool. And in France I found no similar internet site.</p>\r\n<p>After several weeks on your Site that I try to translate, because my English is not very good, I created a style from one of yours.</p>\r\n<p>The only mistake still remains the classification of the bibliography. In France, we classify by Author, then year. But we have many accents, and the alphabetical classification is not so good, G&ouml;le arrives after Galembert:</p>\r\n<p>G&Ouml;LE, Nil&uuml;fer. 2005. &laquo;&nbsp;La la&iuml;cit&eacute; r&eacute;publicaine et l'islam public&nbsp;&raquo;. <em>Pouvoirs</em>, N&deg; 115, (4), pp.&nbsp;73-86.</p>\r\n<p>GALEMBERT, Claire de. 2008. &laquo;&nbsp;Pr&eacute;sentation du num&eacute;ro. Le voile en proc&egrave;s&nbsp;&raquo;. <em>Droit et soci&eacute;t&eacute;</em>, N&deg; 68, (1), pp.&nbsp;11-31.</p>\r\n<p>I wanted to know how to modify this error, the only one so that the bibliography is completed.</p>\r\n<p>Marie-Laure</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-08-25T11:55:54.937-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "485941",
    "ThreadId": "224819",
    "Html": "<p>The sorting is done based on the internal algorithm of the xslt engine you are using. That is not something you can influence.</p>\r\n<p>Are you using Office on a Mac? If so you might have hit on the sorting problem described in this thread: <a href=\"http://bibword.codeplex.com/Thread/View.aspx?ThreadId=86001\">http://bibword.codeplex.com/Thread/View.aspx?ThreadId=86001</a></p>",
    "PostedDate": "2010-08-28T02:16:45.34-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "486012",
    "ThreadId": "224819",
    "Html": "<p>Thank you for your answer.</p>\r\n<p>Indeed I am on Mac word 2008.</p>\r\n<p>I read the comment which you gave. I indeed have a sortkey, the problem of the sorting is based on accents. If I transform my text and replace &ouml; by o the name of the author is not the same.</p>\r\n<p>I made tries. I transformed my bibliography into static text and I sorted out it by the option of sorting of Word. There that works because we can choose the French tongue.</p>\r\n<p>So my questions :</p>\r\n<p>1. Can we specify the language of sorting with a code &lt;language id=&quot;fr&quot;&gt;?<br>2. I was wondering if we could write a command line saying: &quot;a&gt;&agrave;&gt; b&gt; c&gt; d&gt; e&gt; &eacute;&gt; &egrave;&quot; etc.<br>3. Or is it possible to write code that does not take into account accents for sorting and displaying it to take the original source?<br>4. How to create a conditional sortkey?</p>\r\n<p><br>Thank you for your advice, I'm not a programmer and my questions may be absurd.</p>",
    "PostedDate": "2010-08-28T11:38:24.91-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "486018",
    "ThreadId": "224819",
    "Html": "<p><strong>1.</strong></p>\r\n<p>Yes, xslt sorting allows for a lang attribute. In the code, there is something like:</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">sort</span> <span style=\"color:red\">select</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">b:SortKey</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">data-type</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">text</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span><span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">sort</span><span style=\"color:blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p>You could replace that by:</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">sort</span> <span style=\"color:red\">select</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">b:SortKey</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">data-type</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">text</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">lang</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">fr</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span><span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">sort</span><span style=\"color:blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p>But I'm not sure what you want to achieve by this. The sorting of letters is the same in English as in French&nbsp;as far as I know, so I doubt you will see any difference in output. As the other thread discusses, there are errors in the sorting routine of the xslt engine of Office for Mac (test showed correct results on Windows). Changing the lang attribute&nbsp;won't fix that.</p>\r\n<p><strong>2.</strong></p>\r\n<p>Not without getting creative.&nbsp;One &quot;creative&quot; solution could be to translate every character to a character number pair. You would then translate an accented character to its unaccented counterpart and assign a number to its order. For example:</p>\r\n<ul>\r\n<li>a =&gt; a0</li>\r\n<li>&agrave; =&gt; a1</li>\r\n<li>b =&gt; b0</li>\r\n<li>...</li>\r\n<li>e =&gt; e0</li>\r\n<li>&eacute; =&gt; e1</li>\r\n<li>&egrave; =&gt; e2</li>\r\n<li>...</li>\r\n</ul>\r\n<p>Then when you would sort &quot;be&quot;, &quot;b&egrave;&quot;, and &quot;be&quot;, you would get:</p>\r\n<ul>\r\n<li>be =&gt; b0e0</li>\r\n<li>b&egrave; =&gt; b0e2</li>\r\n<li>b&eacute; =&gt; b0e1</li>\r\n</ul>\r\n<p>Which using an ordinary sort would result in be &lt; b&eacute; &lt; b&egrave;.</p>\r\n<p>Or along the same way, translate every character to a number where all the numbers contain the same amount of digits and the number describes the sorting order. Each 'sentence' would be replaced by an extremely long sequence of digits, but those can be easily sorted.</p>\r\n<p><strong>3.</strong></p>\r\n<p>The same holds as for 2: you could write a translate function which transforms every character to its unaccented equivalent.</p>\r\n<p><strong>4.</strong></p>\r\n<p>What do you mean by &quot;conditional&quot;? Sortkeys are just like any other format strings in BibWord. So you could write a sortkey like %Author:0|Editor:0|Title% which will first try to use the author, fall back to the editor if there is no author, or eventually fall back to the title if there is no author or editor.</p>",
    "PostedDate": "2010-08-28T13:50:30.803-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "487766",
    "ThreadId": "224819",
    "Html": "<p>Thank you very much for yours answers.</p>\r\n<p><strong>1.</strong> By adding the language code, the bibliography is not generated even in Word! So this is actually not the solution.</p>\r\n<p><br><strong>2</strong>. I tried a code like this:</p>\r\n<p>&lt;xsl:number value=&quot;a = a0&quot;&gt;&lt;/xsl:number&gt;</p>\r\n<p>&lt;xsl:number value=&quot;&agrave; = a1&quot;&gt;&lt;/xsl:number&gt;</p>\r\n<p>&lt;xsl:number value=&quot;&acirc; = a2&quot;&gt;&lt;/xsl:number&gt;</p>\r\n<p>&nbsp;etc. ...<br>but he adds the letters after the reference that&rsquo;s all.</p>\r\n<p><br><strong>3</strong>. I tried an other code like this:&lt;xsl:value-of select=translate(a , a0)&rdquo;&gt;</p>\r\n<p>&lt;xsl:value-of&gt;&lt;xsl:value-of select=&ldquo;translate(&agrave; , a1)&rdquo;&gt;</p>\r\n<p>&lt;xsl:value-of&gt;&lt;xsl:value-of select=&ldquo;translate(&acirc; , a2)&rdquo;&gt;</p>\r\n<p>and this:</p>\r\n<p>&lt;xsl:value-of&gt;&lt;xsl:value-of select=&ldquo;translate(chaine, b , b0)&rdquo;&gt;&lt;xsl:value-of&gt;</p>\r\n<p><br>But nothing it&rsquo;s happening with these examples.</p>\r\n<p><br><strong>4</strong>. For me a conditional sortkey, this meant, for example: if there is an '&eacute;' classified as an 'e' command with 'if'. But this seems too complicated.</p>\r\n<p><br>I am not a programmer and this is a bit complicated, can you tell me if I'm on the right track?</p>\r\n<p>thanks, mlbl</p>",
    "PostedDate": "2010-09-01T11:25:56.95-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "488487",
    "ThreadId": "224819",
    "Html": "<p>I don't have a Mac around to try things on, but I doubt that adding a &quot;lang&quot; attribute would break the style. I can imagine it being ignored and having no effect though.</p>\r\n<p>The xslt translate function only works for character by character substitutions. It can't be used to substitute one character by 2 others. You would have to write a template&nbsp;function yourself to handle all characters separately. The following is an example of a&nbsp;full xslt file (for demo purposes) which contains such a function (very limited):</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">&lt;?</span><span style=\"color:#a31515\">xml</span> <span style=\"color:red\">version</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">1.0</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">encoding</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">utf-8</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">?&gt;</span>\r\n<span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">stylesheet</span> <span style=\"color:red\">version</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">1.0</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">xmlns:xsl</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">http://www.w3.org/1999/XSL/Transform</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">xmlns:msxsl</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">urn:schemas-microsoft-com:xslt</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">exclude-result-prefixes</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">msxsl</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n  <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">output</span> <span style=\"color:red\">method</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">text</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">/&gt;</span>\r\n\r\n  <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">template</span> <span style=\"color:red\">match</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">*</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">call-template</span> <span style=\"color:red\">name</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">convert</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n      <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">with-param</span> <span style=\"color:red\">name</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">input</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">select</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">text()</span><span style=\"color:black\">&quot;</span> <span style=\"color:blue\">/&gt;</span>\r\n    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">call-template</span><span style=\"color:blue\">&gt;</span>\r\n  <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">template</span><span style=\"color:blue\">&gt;</span>\r\n\r\n  <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">template</span> <span style=\"color:red\">name</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">convert</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">param</span> <span style=\"color:red\">name</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">input</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">/&gt;</span>\r\n\r\n    <span style=\"color:green\">&lt;!-- It is assumed that there is always at least 1 character. --&gt;</span>\r\n    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">variable</span> <span style=\"color:red\">name</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">char</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">select</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">substring($input, 1, 1)</span><span style=\"color:black\">&quot;</span> <span style=\"color:blue\">/&gt;</span>\r\n\r\n    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">choose</span><span style=\"color:blue\">&gt;</span>\r\n      <span style=\"color:green\">&lt;!-- Provide a when for every special character. --&gt;</span>\r\n      <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">when</span> <span style=\"color:red\">test</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">$char = '&acirc;'</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">text</span><span style=\"color:blue\">&gt;</span>a1<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">text</span><span style=\"color:blue\">&gt;</span>\r\n      <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">when</span><span style=\"color:blue\">&gt;</span>\r\n      <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">when</span> <span style=\"color:red\">test</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">$char = '&eacute;'</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">text</span><span style=\"color:blue\">&gt;</span>e1<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">text</span><span style=\"color:blue\">&gt;</span>\r\n      <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">when</span><span style=\"color:blue\">&gt;</span>\r\n      <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">when</span> <span style=\"color:red\">test</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">$char = '&egrave;'</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">text</span><span style=\"color:blue\">&gt;</span>e2<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">text</span><span style=\"color:blue\">&gt;</span>\r\n      <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">when</span><span style=\"color:blue\">&gt;</span>\r\n      <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">when</span> <span style=\"color:red\">test</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">$char = '&ecirc;'</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">text</span><span style=\"color:blue\">&gt;</span>e3<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">text</span><span style=\"color:blue\">&gt;</span>\r\n      <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">when</span><span style=\"color:blue\">&gt;</span>\r\n      <span style=\"color:green\">&lt;!-- Use the otherwise to handle all ordinary characters. --&gt;</span>\r\n      <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">otherwise</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">value-of</span> <span style=\"color:red\">select</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">$char</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">/&gt;</span>\r\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">text</span><span style=\"color:blue\">&gt;</span>0<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">text</span><span style=\"color:blue\">&gt;</span>\r\n      <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">otherwise</span><span style=\"color:blue\">&gt;</span>\r\n    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">choose</span><span style=\"color:blue\">&gt;</span>\r\n      \r\n    <span style=\"color:green\">&lt;!-- Repeat with the other characters. --&gt;</span>\r\n    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">if</span> <span style=\"color:red\">test</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">string-length($input) &gt; 1</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n      <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">call-template</span> <span style=\"color:red\">name</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">convert</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">with-param</span> <span style=\"color:red\">name</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">input</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">select</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">substring($input, 2)</span><span style=\"color:black\">&quot;</span> <span style=\"color:blue\">/&gt;</span>\r\n      <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">call-template</span><span style=\"color:blue\">&gt;</span>\r\n    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">if</span><span style=\"color:blue\">&gt;</span>\r\n    \r\n  <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">template</span><span style=\"color:blue\">&gt;</span>\r\n<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">xsl</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">stylesheet</span><span style=\"color:blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p>Now if you would feed the following xml file to the xslt:</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">&lt;?</span><span style=\"color:#a31515\">xml</span> <span style=\"color:red\">version</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">1.0</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">encoding</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">utf-8</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">?&gt;</span>\r\n<span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">test</span><span style=\"color:blue\">&gt;</span>b&eacute;n&eacute;dict / &ecirc;tre<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">test</span><span style=\"color:blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p>you would get:</p>\r\n<div id=\"_mcePaste\" style=\"width:1px;height:1px;overflow:hidden;top:0px;left:-10000px\">﻿</div>\r\n<div style=\"color:black;background-color:white\">\r\n<pre>b0e1n0e1d0i0c0t0 0/0 0e3t0r0e0\r\n</pre>\r\n</div>\r\n<p>But you should really ask yourself if you want to go through all this trouble. Wouldn't it be mucht easier to write your entire document and live with incorrectly sorted names for now. Then, once your document is finalized, you could ask someone with Windows and Word 2007/2010 if you could use their machine for 5 minutes to fix everything.</p>",
    "PostedDate": "2010-09-02T13:47:58.493-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "495589",
    "ThreadId": "224819",
    "Html": "<p>Hello,</p>\r\n<p>Thank you for your answers.</p>\r\n<p>I react now because I tried numerous programmings of codes, even by asking for professionals' help to my work.</p>\r\n<p>The answer is that the coding does not work. The only and better solution remains the import of the document under word 2007 (PC) and there there are not problems anymore of classification.</p>\r\n<p><br>Thank you still for your help, hoping that Microsoft decides to make a corrective for MAC...</p>\r\n<p>Best,</p>",
    "PostedDate": "2010-09-19T06:28:43.54-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]